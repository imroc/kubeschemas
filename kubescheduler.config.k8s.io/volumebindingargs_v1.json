{
  "description": "VolumeBindingArgs holds arguments used to configure the VolumeBinding plugin.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "kubescheduler.config.k8s.io/v1"
      ],
      "type": "string"
    },
    "bindTimeoutSeconds": {
      "description": "BindTimeoutSeconds is the timeout in seconds in volume binding operation. Value must be non-negative integer. The value zero indicates no waiting. If this value is nil, the default value (600) will be used.",
      "format": "int64",
      "type": "integer"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "VolumeBindingArgs"
      ],
      "type": "string"
    },
    "shape": {
      "description": "Shape specifies the points defining the score function shape, which is used to score nodes based on the utilization of provisioned PVs. The utilization is calculated by dividing the total requested storage of the pod by the total capacity of feasible PVs on each node. Each point contains utilization (ranges from 0 to 100) and its associated score (ranges from 0 to 10). You can turn the priority by specifying different scores for different utilization numbers. The default shape points are: 1) 10 for 0 utilization 2) 0 for 100 utilization All points must be sorted in increasing order by utilization.",
      "items": {
        "$ref": "../kubescheduler.config.k8s.io/utilizationshapepoint_v1.json",
        "default": {}
      },
      "type": "array",
      "x-kubernetes-list-type": "atomic"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object"
}