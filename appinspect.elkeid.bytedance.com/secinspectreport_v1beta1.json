{
  "description": "SecInspectReport is the Schema for the secinspectreports API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "appinspect.elkeid.bytedance.com/v1beta1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "SecInspectReport"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "SecInspectReportSpec defines the desired state of SecInspectReport",
      "properties": {
        "contents": {
          "description": "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"make\" to regenerate code after modifying this file",
          "items": {
            "properties": {
              "info": {
                "properties": {
                  "reskind": {
                    "type": "string"
                  },
                  "resname": {
                    "type": "string"
                  },
                  "resnamespace": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "results": {
                "items": {
                  "properties": {
                    "checkresult": {
                      "enum": [
                        "pass",
                        "fail",
                        "warn",
                        "error",
                        "skip"
                      ],
                      "type": "string"
                    },
                    "policymsg": {
                      "properties": {
                        "policydesc": {
                          "type": "string"
                        },
                        "policyname": {
                          "type": "string"
                        },
                        "remark": {
                          "type": "string"
                        },
                        "riskinfo": {
                          "type": "string"
                        },
                        "suggest": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "policyname": {
                      "type": "string"
                    },
                    "policytype": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "status": {
                "enum": [
                  "wait",
                  "running",
                  "finish",
                  "error"
                ],
                "type": "string"
              },
              "summary": {
                "properties": {
                  "fail": {
                    "type": "integer"
                  },
                  "pass": {
                    "type": "integer"
                  }
                },
                "required": [
                  "fail",
                  "pass"
                ],
                "type": "object"
              },
              "timestamp": {
                "description": "Timestamp is a struct that is equivalent to Time, but intended for protobuf marshalling/unmarshalling. It is generated into a serialization that matches Time. Do not use in Go structs.",
                "properties": {
                  "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.",
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "required": [
                  "nanos",
                  "seconds"
                ],
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "status": {
      "description": "SecInspectReportStatus defines the observed state of SecInspectReport",
      "properties": {
        "renew": {
          "type": "string"
        },
        "status": {
          "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"make\" to regenerate code after modifying this file",
          "enum": [
            "wait",
            "running",
            "finish",
            "error"
          ],
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "appinspect.elkeid.bytedance.com",
      "kind": "SecInspectReport",
      "version": "v1beta1"
    }
  ]
}