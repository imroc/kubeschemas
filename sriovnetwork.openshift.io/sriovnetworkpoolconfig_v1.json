{
  "description": "SriovNetworkPoolConfig is the Schema for the sriovnetworkpoolconfigs API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "sriovnetwork.openshift.io/v1"
      ],
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "SriovNetworkPoolConfig"
      ],
      "type": "string"
    },
    "metadata": {
      "allOf": [
        {
          "$ref": "../meta.apis.pkg.apimachinery.k8s.io/objectmeta_v1.json"
        }
      ],
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
    },
    "spec": {
      "description": "SriovNetworkPoolConfigSpec defines the desired state of SriovNetworkPoolConfig",
      "properties": {
        "maxUnavailable": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "description": "maxUnavailable defines either an integer number or percentage\nof nodes in the pool that can go Unavailable during an update.\n\n\nA value larger than 1 will mean multiple nodes going unavailable during\nthe update, which may affect your workload stress on the remaining nodes.\nDrain will respect Pod Disruption Budgets (PDBs) such as etcd quorum guards,\neven if maxUnavailable is greater than one.",
          "x-kubernetes-int-or-string": true
        },
        "nodeSelector": {
          "description": "nodeSelector specifies a label selector for Nodes",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "ovsHardwareOffloadConfig": {
          "description": "OvsHardwareOffloadConfig describes the OVS HWOL configuration for selected Nodes",
          "properties": {
            "name": {
              "description": "Name is mandatory and must be unique.\nOn Kubernetes:\nName is the name of OvsHardwareOffloadConfig\nOn OpenShift:\nName is the name of MachineConfigPool to be enabled with OVS hardware offload",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "status": {
      "description": "SriovNetworkPoolConfigStatus defines the observed state of SriovNetworkPoolConfig",
      "type": "object"
    }
  },
  "required": [
    "apiVersion",
    "kind"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "sriovnetwork.openshift.io",
      "kind": "SriovNetworkPoolConfig",
      "version": "v1"
    }
  ]
}